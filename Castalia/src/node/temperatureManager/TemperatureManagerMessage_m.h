//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/temperatureManager/TemperatureManagerMessage.msg.
//

#ifndef _TEMPERATUREMANAGERMESSAGE_M_H_
#define _TEMPERATUREMANAGERMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/node/temperatureManager/TemperatureManagerMessage.msg:15</tt> by nedtool.
 * <pre>
 * message TemperatureManagerMessage
 * {
 *     double temperature;
 * }
 * </pre>
 */
class TemperatureManagerMessage : public ::cMessage
{
  protected:
    double temperature_var;

  private:
    void copy(const TemperatureManagerMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TemperatureManagerMessage&);

  public:
    TemperatureManagerMessage(const char *name=NULL, int kind=0);
    TemperatureManagerMessage(const TemperatureManagerMessage& other);
    virtual ~TemperatureManagerMessage();
    TemperatureManagerMessage& operator=(const TemperatureManagerMessage& other);
    virtual TemperatureManagerMessage *dup() const {return new TemperatureManagerMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual double getTemperature() const;
    virtual void setTemperature(double temperature);
};

inline void doPacking(cCommBuffer *b, TemperatureManagerMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, TemperatureManagerMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _TEMPERATUREMANAGERMESSAGE_M_H_

